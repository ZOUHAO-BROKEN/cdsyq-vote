<template>
<image src="../img/votePlayer/bg1.jpg" mode="aspectFill" class="bgImg"/>
<image src="../img/votePlayer/bg2.jpg" mode="aspectFill" class="bgImg1"/>
<image src="../img/votePlayer/bg3.jpg" mode="aspectFill" class="bgImg2"/>
<image src="../img/votePlayer/bg4.png" mode="aspectFill" class="bgImg4"/>
<div class="votePlayer-content">
  <span class="weui-cells__title vote_title">请选择最喜爱的队员</span>
  <div v-for="team in teams" :key="team.teamId">
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell" style="justify-content: center;align-items: center;">
        <!-- <div class="weui-cell__hd" style="position: relative;margin-right: 10px;">
          <image src="{{ team.logoImage }}" style="width: 50px; height: 50px; display: block"/>
        </div> -->
        <div class="weui-cell__bd" style="flex:0">
          <!-- <div>{{ team.teamName }}</div> -->
          <image src="{{ team.teamImg }}" class="teamImg"/>
        </div>
      </div>
    </div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_access">
        <view class="weui-cell__bd">
          <view class="weui-grids votePlayer-box">
            <block v-for="player in team.players" :key="player.playerId">
              <view class="weui-grid "
              :class="{'weui-grid_active':player.checked}" style="padding: 5px;margin-bottom:20rpx;"
              @tap="handleClick(team.teamId, player.playerId)">
                <image class="weui-grid__icon" src="{{ player.headImage }}" style="width:160rpx;height:160rpx"/>
                <!-- <view class="weui-grid__label">{{ player.playerName }}<icon wx:if="{{player.checked}}" class="weui-icon-radio" type="success_no_circle" size="16"></icon></view> -->
                <view class="weui-grid__label team-title">{{ player.playerName }}</view>
                <view class="checked-box"><image wx:if="{{player.checked}}" src="../img/votePlayer/checked.png" class="team-checked"/></view>
             </view>
            </block>
          </view>
        </view>
      </div>
    </div>
  </div>
  <view class="weui-btn-area" style="padding-bottom: 30px">
      <button v-if="isVoted" class="weui-btn" type="primary" @tap="confirmVote">确定</button>
      <button v-else class="weui-btn" type="primary" disabled="true">已投票</button>
    </view>
</div>
  
</template>

<script>
  import wepy from '@wepy/core'
  import {
    getAllTeam, votePlayer, getStaticUrl, getPlayerVoteResult, getStaticUrlNative
  } from '../utils/request'
  wepy.page({
    config: {
      navigationBarTitleText: '队伍投票'
    },
    data: {
      teams: [],
      checkedTeam: '',
      isVoted: true,
      voteForm: {}
    },
    onLoad(option) {
      this.voteForm.userId = option.userId
      getAllTeam().then(s => {
        this.teams = s.map(e => {
          e.checked=false
          e.logoImage = getStaticUrlNative(e.logoImage)
          e.teamImg = getStaticUrlNative('votePlayer/team' + e.teamId + '.png')
          e.players = e.players.map(item => {
            item.headImage = getStaticUrlNative(item.headImage)
            item.checked = false
            return item
          })
          return e
        })
        return getPlayerVoteResult({userId: this.voteForm.userId})
      }).then(res => {
        this.isVoted = res.isVoted === '0' && res.voteState === "1"
        if (res.isVoted === '1') {
          console.log(this.teams)
          this.teams.forEach(team => {
            team.players.forEach(player => {
              res.players.forEach(selected => {
                console.log(team)
                console.log(player)
                console.log(selected)
                player.checked = player.checked || player.playerId === selected.playerId
              })
            })
          })
        }
      })
    },
    methods: {
      handleClick(teamId, playerId, flag) {
        if (!this.isVoted && !flag) {
          return
        }
        this.teams.forEach(item => {
          if(item.teamId === teamId) {
            item.players.forEach(player => {
              player.checked = player.playerId === playerId
            })
          }
        })
      },
      confirmVote() {
        if (!this.isVoted) {
          return
        }
        let playerArr = [];
        this.teams.forEach(team => {
          team.players.forEach(player => {
            if(player.checked) {
              console.log(player)
              playerArr.push({
                'playerId': player.playerId
              })
            }
          })
        })
        if (playerArr.length !== this.teams.length) {
          wx.showToast({
            title: '请在每队选择一位选手！',
            icon: 'none',
            duration: 2500
          })
          return
        }
        this.voteForm.players = playerArr
        votePlayer(this.voteForm).then(res => {
          wx.showToast({
            title: '投票成功！',
            // icon: 'fail',
            duration: 1000
          })
          this.isVoted = false
        })
      }
    }
  })
</script>
<style scoped>
.weui-cells{
  background: none
}
.vote_title{
  font-size: 36rpx;
  color:#fbfdfd;
  display:block;
  text-align: center;
}
.bgImg, .bgImg1, .bgImg2, .bgImg4{
  width: 100%;
  height: 100%;
  z-index: 1;
  position: absolute;
  top: 0;
  left: 0
}
.bgImg1{
  top: 1200rpx;
}
.bgImg2{
  top: 2400rpx;
}
.bgImg4{
  z-index: 2
}
.votePlayer-content{
  position: absolute;
  z-index: 2
}
.weui-cells:before, .weui-cells:after{
  border:0
}
.votePlayer-box{
  background: #fff;
  border: 10rpx solid #4F20FA;
  padding: 60rpx 20rpx 10rpx;
}
.weui-grid{
  border: 0
}
.team-title{
  text-align: left;
  color: #333;
  font-size: 30rpx;
  margin-top: 30rpx;
  margin-bottom: 30rpx;
  padding-left: 20rpx;
  height: 60rpx;
  line-height: 60rpx;
  float: left;
}
.checked-box{
  float: right;
  width: 44rpx;
  height: 44rpx;
  background-color: #eef7fc;
  border-radius:50%;
  border:1px solid #c9cbcd;
  margin-top: 35rpx;
  margin-right:10rpx; 
}
.team-checked{
  z-index: 4;
  width: 44rpx;
  height: 44rpx;
}
.teamImg{
  width: 360rpx;
  height: 90rpx;
  position: absolute;
  /* top: 120rpx; */
  left: 50%;
  transform: translateX(-50%);
  z-index: 2
}
.button-hover[type=primary]{
  background-color:#f8b301; 
  font-size: 36rpx;
  color: #fff
}
button[disabled][type=primary]{
  background-color:#f4c753; 
  font-size: 36rpx;
  color: #fff
}
button[type=primary]{
  background-color:#f8b301; 
}
</style>

